{
  "openapi": "3.0.4",
  "info": {
    "title": "API",
    "version": "v1"
  },
  "paths": {
    "/api/Account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Registra un nuevo usuario",
        "description": "Permite registrar un nuevo usuario en el sistema con un rol específico. El registro es controlado por el rol del usuario actual.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro exitoso",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida o errores de validación",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Inicia sesión y devuelve un token JWT",
        "description": "Proporciona un correo electrónico y una contraseña válidos para obtener un token JWT, que permite acceder a la aplicación como Admin, Reclutador o Candidato.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inválidas",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ToDoItems": {
      "get": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Obtiene todas las tareas - ToDoItems del usuario",
        "description": "Recupera una lista de todas los ToDoItems disponibles.",
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "post": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Crea una nueva tarea - ToDoItem",
        "description": "Permite crear un nueva una tarea -  ToDoItem proporcionando los datos necesarios.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateToDoItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateToDoItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateToDoItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Operación exitosa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/ToDoItems/completed": {
      "get": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Obtiene todas las tares - ToDoItems completados del usuario",
        "description": "Recupera una lista de todas los ToDoItems completados de un usuario.",
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/ToDoItems/pending": {
      "get": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Obtiene todas las tares - ToDoItems pendientes por completar del usuario",
        "description": "Recupera una lista de todas los ToDoItems pendientes por completar de un usuario.",
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoIEnumerableGenericResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/ToDoItems/{id}": {
      "get": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Obtiene una tarea - ToDoItem por su ID, de un usuario",
        "description": "Recupera uno ToDoItem por su , de un usuario.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró el ToDoItemDto con el ID proporcionado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Actualiza una tarea - ToDoItem existente",
        "description": "Permite actualizar un ToDoItem existente utilizando su ID y los nuevos datos.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateToDoItemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateToDoItemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateToDoItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve el ToDoItem actualizado.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró el ToDoItem con el ID especificado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      },
      "delete": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Elimina una tarea - ToDoItem existente de un usuario",
        "description": "Permite eliminar un ToDoItem utilizando su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemDtoGenericResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró el ToDoItem con el ID especificado."
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/ToDoItems/metrics": {
      "get": {
        "tags": [
          "ToDoItems"
        ],
        "summary": "Obtiene todas las metricas del usuario",
        "description": "Recupera una lista de todas las metricas del usuario.",
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve las metricas del usuario.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemMetricsDtoIEnumerableGenericResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemMetricsDtoIEnumerableGenericResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDoItemMetricsDtoIEnumerableGenericResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateToDoItemDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "El título de la tarea."
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "La descripción de la tarea",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "El correo electrónico del usuario.",
            "format": "email"
          },
          "password": {
            "minLength": 8,
            "pattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-])[A-Za-z\\d!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-]{8,}$",
            "type": "string",
            "description": "La contraseña del usuario, que debe incluir al menos una letra mayúscula, una letra minúscula, un número y un carácter especial."
          }
        },
        "additionalProperties": false,
        "example": {
          "email": "",
          "password": ""
        }
      },
      "RegisterDto": {
        "required": [
          "email",
          "fullName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "El correo electrónico del usuario a registrar",
            "format": "email"
          },
          "fullName": {
            "minLength": 1,
            "type": "string",
            "description": "El nombre completo del usuario a registrar"
          },
          "password": {
            "minLength": 8,
            "pattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-])[A-Za-z\\d!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-]{8,}$",
            "type": "string",
            "description": "La contraseña del usuario, que debe incluir al menos una letra mayúscula, una letra minúscula, un número y un carácter especial."
          }
        },
        "additionalProperties": false,
        "example": {
          "email": "",
          "fullName": "",
          "password": ""
        }
      },
      "ToDoItemDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ToDoItemDtoGenericResponseDto": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ToDoItemDto"
          }
        },
        "additionalProperties": false
      },
      "ToDoItemDtoIEnumerableGenericResponseDto": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToDoItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ToDoItemMetricsDto": {
        "type": "object",
        "properties": {
          "totalTasks": {
            "type": "integer",
            "format": "int32"
          },
          "completedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "pendingTasks": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ToDoItemMetricsDtoIEnumerableGenericResponseDto": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToDoItemMetricsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateToDoItemDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "El título de la tarea."
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "La descripción de la tarea",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean",
            "description": "true o false dependiendo si la tarea ha sido completada o no"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization Example : 'Bearer eyeyeyeyeyye'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}